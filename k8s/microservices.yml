apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: nkoussagregoire
  name: zerofiltretech-blog-api
spec:
  minReadySeconds: 30
  progressDeadlineSeconds: 300
  replicas: 1
  selector:
    matchLabels:
      app: zerofiltretech-blog-api
  template:
    metadata:
      labels:
        app: zerofiltretech-blog-api
    spec:
      containers:
        - name: redis-blog-api
          image: redis
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 200m
              memory: 200Mi
          ports:
            - containerPort: 6379
        - name: zerofiltretech-blog-api
        #edit this
          image: 291223/zerofiltre-blog:16_nkoussagregoire
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          resources:
            requests:
                cpu: '0.05'
                memory: 100Mi
            limits:
                cpu: '1'
                memory: 2Gi
          livenessProbe:
              httpGet:
                path: /swagger-ui.html
                port: 80
              periodSeconds: 300
              timeoutSeconds: 5

          startupProbe:
              httpGet:
                path: /swagger-ui.html
                port: 80
              initialDelaySeconds: 
              timeoutSeconds: 10
              failureThreshold: 10

          envFrom:
            - configMapRef:
                name: zerofiltretech-blog-api
            - secretRef:
                name: zerofiltretech-blog-api
---
apiVersion: v1
kind: Service
metadata:
  namespace: nkoussagregoire
  name: zerofiltretech-blog-api
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: zerofiltretech-blog-api
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: nkoussagregoire
  name: zerofiltretech-blog-api
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    # add an annotation indicating the issuer to use.
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  rules:
    - host: nkoussagregoire.blog-api.zerofiltre.tech
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: zerofiltretech-blog-api
                port:
                  number: 80
  tls: # < placing a host in the TLS config will indicate a certificate should be created
    - hosts:
        - nkoussagregoire.blog-api.zerofiltre.tech
      secretName: blog-api-zerofiltre-ingress-cert # < cert-manager will store the created certificate in this secret.
